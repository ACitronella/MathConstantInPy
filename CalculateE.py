# 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901157383418793070215408914993488416750924476146066808226480016847741185374234544243710753907774499206955170276183860626133138458300075204493382656029760673711320070932870912744374704723069697720931014169283681902551510865746377211125238978442505695369677078544996996794686445490598793163688923009879312773617821542499922957635148220826989519366803318252886939849646510582093923982948879332036250944311730123819706841614039701983767932068328237646480429531180232878250981945581530175671736133206981125099618188159304169
from decimal import *

def Bernoulli(n): # https://en.wikipedia.org/wiki/E_(mathematical_constant)
    """
    not effient at all
    at n = 1000000000000000000000000000
    return 2.7182818284590452353602874 69993521583527724476019815...
    """
    getcontext().prec = 1000
    return str((1 + Decimal(1)/Decimal(n))**n)

def factorial(n):
    """
    return 2.7182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274274663919320030599218174135966290435729003342952605956307381323286279434907632338298807531952510187
    """
    getcontext().prec = 1000
    sum = 0
    F = 1
    for i in range (1,n):
        sum = sum + Decimal(1)/Decimal(F)
        F = F * i
    return sum

print(factorial(10000))